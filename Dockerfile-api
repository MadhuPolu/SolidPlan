FROM php:7.3-cli-alpine3.10 as api

ARG APCU_VERSION=5.1.17

ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV APP_ENV prod
ENV APP_DEBUG 0
ENV COMPOSER_ALLOW_SUPERUSER 1

RUN set -eux; \
	apk add --no-cache --virtual .build-deps \
		$PHPIZE_DEPS \
		icu-dev \
		libzip-dev \
		mysql-dev \
		zlib-dev \
	; \
	\
	docker-php-ext-configure zip --with-libzip; \
	docker-php-ext-install -j$(nproc) \
		intl \
		pdo_mysql \
		pcntl \
		zip \
	; \
	pecl install \
		apcu-${APCU_VERSION} \
	; \
	pecl clear-cache; \
	docker-php-ext-enable \
		apcu \
		opcache \
	; \
	\
	runDeps="$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \
			| tr ',' '\n' \
			| sort -u \
			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
	)"; \
	apk add --no-cache --virtual .api-phpexts-rundeps $runDeps; \
	\
	apk del .build-deps; \
	apk --no-cache add tzdata && \
  cp /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
  echo "UTC" | tee /etc/timezone && \
  apk del tzdata;

RUN apk add --no-cache bash && \
    curl -sS https://get.symfony.com/cli/installer | bash && \
    ln -s ~/.symfony/bin/symfony /usr/local/bin/symfony && \
    apk del bash

COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

RUN ln -s $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini
COPY docker/api/php.ini $PHP_INI_DIR/conf.d/api.ini

ENV PATH="${PATH}:/root/.composer/vendor/bin"

WORKDIR /var/www

COPY composer.json composer.lock symfony.lock ./

RUN set -eux; \
	composer install --prefer-dist --no-dev --no-scripts --no-progress --no-suggest; \
	composer clear-cache

COPY .env ./
RUN composer dump-env prod; \
  	rm .env

COPY bin bin/
COPY config config/
COPY public public/
COPY src src/

RUN openssl rand -base64 32 > /root/jwt_variable; \
    JWT_PASSPHRASE=$(cat /root/jwt_variable); \
    mkdir -p config/jwt; \
    openssl genpkey -out config/jwt/private.pem -aes256 -algorithm rsa -pkeyopt rsa_keygen_bits:4096s -pass "pass:$JWT_PASSPHRASE"; \
    openssl pkey -in config/jwt/private.pem -out config/jwt/public.pem -pubout -passin "pass:$JWT_PASSPHRASE"

RUN set -eux; \
	mkdir -p var/cache var/log; \
	composer dump-autoload --classmap-authoritative --no-dev; \
	composer run-script --no-dev post-install-cmd; \
	chmod +x bin/console; sync

ADD docker/api/run.sh /etc/app/run.sh
ENTRYPOINT ["/bin/sh", "/etc/app/run.sh"]
